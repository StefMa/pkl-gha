/// Actions for managing artifacts in GitHub workflows.
/// This module is a low-level module not indended for direct use.
/// Use the [Action](../Action) module instead to access these actions.
@ModuleInfo { minPklVersion = "0.25.3" }
module com.github.action.actions.Artifact
import "../Workflow.pkl"

/// Type-safe GitHub Action of the [download-artifact](https://github.com/actions/download-artifact) action.
class Download extends Workflow.Step {
  uses = "actions/download-artifact@v4"

  hidden name: (String|Number|Boolean)?
  hidden artifactIds: (String|Number|Boolean)?
  hidden path: (String|Number|Boolean)?
  hidden pattern: (String|Number|Boolean)?
  hidden mergeMultiple: (String|Number|Boolean)?
  hidden githubToken: (String|Number|Boolean)?
  hidden repository: (String|Number|Boolean)?
  hidden runId: (String|Number|Boolean)?

  local localWith = new Mapping {
    ["name"] = name
    ["artifact-ids"] = artifactIds
    ["path"] = path
    ["pattern"] = pattern
    ["merge-multiple"] = mergeMultiple
    ["github-token"] = githubToken
    ["repository"] = repository
    ["run-id"] = runId
  }
  local filteredWith = localWith.toMap().filter((_, value) -> value != null)
  with = if (filteredWith.isEmpty) null else filteredWith.toMapping()
}

/// Type-safe GitHub Action of the [upload-artifact](https://github.com/actions/upload-artifact) action.
class Upload extends Workflow.Step {
  uses = "actions/upload-artifact@v4"

  hidden name: (String|Number|Boolean)?
  hidden path: (String|Number|Boolean)?
  hidden ifNoFilesFound: (String|Number|Boolean)?
  hidden retentionDays: (String|Number|Boolean)?
  hidden compressionLevel: (String|Number|Boolean)?
  hidden overwrite: (String|Number|Boolean)?
  hidden includeHiddenFiles: (String|Number|Boolean)?

  local localWith = new Mapping {
    ["name"] = name
    ["path"] = path
    ["if-no-files-found"] = ifNoFilesFound
    ["retention-days"] = retentionDays
    ["compression-level"] = compressionLevel
    ["overwrite"] = overwrite
    ["include-hidden-files"] = includeHiddenFiles
  }
  local filteredWith = localWith.toMap().filter((_, value) -> value != null)
  with = if (filteredWith.isEmpty) null else filteredWith.toMapping()
}

/// Type-safe GitHub Action of the [upload-artifact/merge](https://github.com/actions/upload-artifact/tree/main/merge) action.
class UploadArtifactMerge extends Workflow.Step {
  uses = "actions/upload-artifact/merge@v4"

  hidden name: (String|Number|Boolean)?
  hidden pattern: (String|Number|Boolean)?
  hidden separateDirectories: (String|Number|Boolean)?
  hidden retentionDays: (String|Number|Boolean)?
  hidden compressionLevel: (String|Number|Boolean)?
  hidden deleteMerged: (String|Number|Boolean)?
  hidden includeHiddenFiles: (String|Number|Boolean)?

  local localWith = new Mapping {
    ["name"] = name
    ["pattern"] = pattern
    ["separate-directories"] = separateDirectories
    ["retention-days"] = retentionDays
    ["compression-level"] = compressionLevel
    ["delete-merged"] = deleteMerged
    ["include-hidden-files"] = includeHiddenFiles
  }
  local filteredWith = localWith.toMap().filter((_, value) -> value != null)
  with = if (filteredWith.isEmpty) null else filteredWith.toMapping()
}
